Configure your Microsoft Entra app for SSO

You must configure permissions and scopes, authorize client applications, update app manifest, and create client secret for your Microsoft Entra app. These configurations help invoke SSO for your bot app.

> [!IMPORTANT]
> Ensure that you've [registered your app](../../../tabs/how-to/authentication/tab-sso-register-aad.md#to-register-a-new-app-in-azure-ad) in Microsoft Entra ID. At registration, Microsoft Entra ID generates a new app ID that you must note. You'll need to update it later in the app manifest file.

### Configure scope for access token

You must configure scope (permission) options for your Microsoft Entra app. You need it for sending access token to Teams client and authorize trusted client applications.

To configure scope and authorize trusted client applications, you'll need:

- [To configure application ID URI for your app](#to-configure-application-id-uri-for-your-app): Configure scope (permission) options for your app. You'll expose a web API and configure the application ID URI.
- [To configure API scope for your app](#to-configure-api-scope-for-your-app): Define scope for the API and the users who can consent for a scope. You can let only admins provide consent for higher-privileged permissions.
- [To configure an authorized client application](#to-configure-an-authorized-client-application): Create authorized client IDs for applications that you want to pre-authorize. It allows the app user to access the app scopes (permissions) you've configured, without requiring any further consent. Pre-authorize only those client applications you trust as your app users won't have the opportunity to decline consent.

#### To configure application ID URI for your app

1. Open the [Azure portal](https://ms.portal.azure.com/) on your web browser.

   The Microsoft Azure Bot page opens.

1. Enter the name of your bot resource in **Search** box, and then select **Enter** to open it.

1. Select **Settings** > **Configuration**.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/bot-app-menu.png" alt-text="Screenshot shows the Configuration menu.":::

    The **Configuration** page appears.

1. Select **Manage**.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/bot-config-manage.png" alt-text="Screenshot shows the Bot resource configuration." :::

    The Microsoft Entra app page appears.

    The new app ID (client ID) for the app appears on this page. Note and save this app ID. You'll need to update it in the app manifest later. If you used the ID of an existing app when you created the bot resource, then ID of that app appears in this page.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/aad-app-regd.png" alt-text="Screenshot shows the Bot app page with Application client ID highlighted.":::

1. Select **Manage** > **Expose an API** from the left pane.

    The **Expose an API** page appears.

1. Select **Add** to generate application ID URI.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/expose-an-api.png" alt-text="Screenshot shows the Set option of Application ID URI." :::

    The section for setting application ID URI appears.

1. Enter the application ID URI in the format explained here.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-tabs/set-app-id-uri.png" alt-text="Screenshot shows the Application ID URI added." :::

    - The **Application ID URI** is pre-filled with app ID (GUID) in the format `api://{AppID}`.

    > [!IMPORTANT]
    >
    > - **Standalone bot**: If you're building a standalone bot, enter the application ID URI as api://botid-{YourBotId}. Here, {YourBotId} is your Microsoft Entra application ID.
    > - **Application ID URI for app with multiple capabilities**: If you're building an app with a bot, a messaging extension, and a tab, enter the application ID URI as `api://fully-qualified-domain-name.com/botid-{YourClientId}`, where `{YourClientId}` is your bot app ID.
    >
    > - **Format for domain name**: Use lowercase letters for domain name. Don't use upper case.
    >
    >   For example, to create an app service or web app with resource name, 'demoapplication':
    >
    >   | If base resource name used is | URL will be... | Format is supported on... |
    >   | --- | --- | --- |
    >   | *demoapplication* | `https://demoapplication.example.net` | All platforms.|
    >   | *DemoApplication* | `https://DemoApplication.example.net` | Desktop, web, and iOS only. It isn't supported in Android. |
    >
    >    Use the lowercase option *demoapplication* as base resource name.

1. Select **Save**.

    A message appears on the browser stating that the application ID URI was updated.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-tabs/app-id-uri-msg.png" alt-text="Screenshot shows the Application ID URI updated message." :::

    The application ID URI displays on the page.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/app-id-uri-added.png" alt-text="Screenshot shows the updated Application ID URI." :::

1. Note and save the application ID URI. You'll need it for updating the app manifest later.

The application ID URI is configured. You can now define scope and permissions for your app.

#### To configure API scope for your app

1. Select **+ Add a scope** in the **Scopes defined by this API** section.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-tabs/select-scope.png" alt-text="Screenshot shows the Add a scope option highlighted." :::

    The **Add a scope** page appears.

1. Enter the details for configuring scope.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-tabs/add-scope.png" alt-text="Screenshot shows how to add scope details in Azure.":::

    1. Enter the scope name.
    1. Select the user who can give consent for this scope. The default option is **Admins only**.
    1. Enter the **Admin consent display name**.
    1. Enter the description for admin consent.
    1. Enter the **User consent display name**.
    1. Enter the user consent description.
    1. Select the **Enabled** option for state.
    1. Select **Add scope**.

        > [!NOTE]
        > For this tutorial, you can use openid profile User.Read User.ReadBasic.All as scope. This scope is suitable for using the [Code sample](bot-sso-code.md#code-sample). You can also add more Graph scopes and permissions. For more information, see [Extend your app with Microsoft Graph permissions and scopes](bot-sso-graph-api.md).

    A message appears on the browser stating that the scope was added.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-tabs/scope-added-msg.png" alt-text="Screenshot shows the Scope added message." :::

    > [!NOTE]
    > The new scope you defined displays on the page. Ensure that you note and save the scope that you've configured. You'll need it to update OAuth connection later.

The scope and permissions are now configured. Next, you must configure the authorized client applications for your Microsoft Entra app.

#### To configure an authorized client application

1. Move through the **Expose an API** page to the **Authorized client application** section, and select **+ Add a client application**.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-tabs/auth-client-apps.png" alt-text="Screenshot shows the Add a client application option highlighted under Authorized client applications." :::

    The **Add a client application** page appears.

1. Enter the appropriate Microsoft 365 client ID for the applications that you want to authorize for your appâ€™s web application.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-tabs/add-client-app.png" alt-text="Screenshot shows the Client ID added." :::

    > [!NOTE]
    >
    > - The Microsoft 365 client IDs for mobile, desktop, and web applications for Teams, Microsoft 365 app, and Outlook are the actual IDs that you must add.
    > - If your app has a tab app, you'll need either web or SPA, as you can't have a mobile or desktop client application in Teams.

1. Select one of the following client IDs:

   | Use client ID | For authorizing... |
   | --- | --- |
   | 1fec8e78-bce4-4aaf-ab1b-5451cc387264 | Teams mobile or desktop application |
   | 5e3ce6c0-2b1f-4285-8d4b-75ee78787346 | Teams web application |
   | 4765445b-32c6-49b0-83e6-1d93765276ca | Microsoft 365 web application |
   | 0ec893e0-5785-4de6-99da-4ed124e5296c | Microsoft 365 desktop application |
   | d3590ed6-52b3-4102-aeff-aad2292ab01c | Microsoft 365 mobile application </br> Outlook desktop application |
   | bc59ab01-8403-45c6-8796-ac3ef710b3e3 | Outlook web application |
   | 27922004-5251-4030-b22d-91ecd9a37ea4 | Outlook mobile application |

1. Select the application ID URI you created for your app in **Authorized scopes** to add the scope to the web API you exposed.

1. Select **Add application**.

    A message appears on the browser stating that the authorized client app was added.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-tabs/update-app-auth-msg.png" alt-text="Screenshot shows the Client ID added message." :::

    The authorized app's client ID displays on the page.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-tabs/client-app-added.png" alt-text="Screenshot shows the newly added Client ID under Authorized client applications screen." :::

    > [!NOTE]
    > You can authorize more than one client application. Repeat the steps of this procedure for configuring another authorized client application.

You've successfully configured app scope, permissions, and client applications. Ensure that you note and save the application ID URI. Next, you configure the access token version.

### Configure the access token version

You must define the access token version for your app in the Microsoft Entra app manifest.

#### To define access token version

1. Select **Manage** > **Manifest** from the left pane.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/azure-portal-manifest.png" alt-text="Screenshot shows the Microsoft Entra admin center Manifest." :::

    The Microsoft Entra app manifest appears.

1. Enter **2** as the value for the `accessTokenAcceptedVersion` property.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/azure-manifest-value.png" alt-text="Screenshot shows the Value for accepted access token version." :::

1. Select **Save**.

    A message appears on the browser stating that the app manifest was updated successfully.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-tabs/update-aad-manifest-msg.png" alt-text="Screenshot shows the Manifest updated message.":::

You've updated the access token version. Next step is to create a client secret for your app next.

### Create client secret for your app

A client secret is a string that the application uses to prove its identity when requesting a token.

#### To create a client secret

1. Select **Manage** > **Certificates & secrets**.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/client-secret-menu.png" alt-text="Screenshot shows the Certificates and secrets menu option.":::

    The **Certificates & secrets** page appears.

1. Select **+ New client secret**.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/client-secret.png" alt-text="Screenshot shows the New client secret option highlighted to add a new client secret.":::

   The **Add a client secret** page appears.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/add-client-secret.png" alt-text="Screenshot shows the Add a client secret page to provide the required details." :::

    1. Enter the description.
    1. Select the duration of validity for the secret.

1. Select **Add**.

   A message appears on the browser stating that the client secret was updated, and the client secret displays on the page.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/client-secret-added.png" alt-text="Screenshot shows the Client secret added message.":::

1. Select the copy button next to the **Value** of client secret.
1. Save the value that you copied. You'll need it later for updating code.

   > [!IMPORTANT]
   > Ensure that you copy the value of client secret right after you create it. The value is visible only at the time when the client secret is created, and it can't be viewed after that.

### Configure redirect URL for your app

Configuration for authentication depends on the platform or device where you want to target your app. You may need to configure redirect URIs, authentication settings, or platform-specific details.

> [!NOTE]
>
> - If your bot app hasn't been granted IT admin consent, app users have to provide consent the first time they use your app on a different platform.
> - Implicit grant is not required if SSO is enabled on a bot app.

You can configure authentication for multiple platforms as long as the URL is unique.

#### To configure redirect URL for your app

1. Open the app you registered in the [Azure portal](https://ms.portal.azure.com/).

1. Select **Manage** > **Authentication** from the left pane.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/azure-portal-platform.png" alt-text="Screenshot shows the Authentication option under Manage." :::

    The **Platform configurations** page appears.

1. Select **+ Add a platform**.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/add-platform.png" alt-text="Screenshot shows the Add a platform option under Authentication." :::

    The **Configure platforms** page appears.

1. Select the platform that you want to configure for your app. You can select the platform type from web or SPA.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/configure-platform.png" alt-text="Screenshot shows the selection of web platform." :::

    The **Configure Web** page appears.

    > [!NOTE]
    > The configurations will be different based on the platform you select.

1. Enter the configuration details for the platform.

    :::image type="content" source="../../../assets/images/authentication/teams-sso-bots/config-web-platform.png" alt-text="Screenshot shows the Configure Web page to provide inputs." :::

    1. Enter the redirect URI. The URI should be unique.

        > [!NOTE]
        > The URL mentioned in **Redirect URIs** is an example.

    1. Enter the front-channel logout URL.
    1. Select the tokens you want Microsoft Entra ID to send for your app.

1. Select **Configure**.

    The platform is configured and displayed in the **Platform configurations** page.

The configuration for Microsoft Entra app is complete, and now you can configure your bot resource for enabling SSO.

<a name='configure-bot-resource-in-azure-ad'></a>

## 